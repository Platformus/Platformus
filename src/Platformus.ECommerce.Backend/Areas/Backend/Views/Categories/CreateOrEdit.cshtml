@* Copyright © 2020 Dmitry Sikorsky. All rights reserved. *@
@* Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information. *@
@model Platformus.ECommerce.Backend.ViewModels.Categories.CreateOrEditViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@inject Platformus.Core.Services.Abstractions.ICultureManager CultureManager
@{
  this.ViewBag.Title = (this.Model.Id == null ? this.Localizer["Create Category"].Value : this.Localizer["Edit Category"].Value);
  this.ViewBag.ActiveMenuItem = "categories";
}
@section title {
  @ViewBag.Title
}
<form class="master-detail__form form" method="post">
  <tabs>
    <tab code="General">@Localizer["General"]</tab>
    <tab code="Seo">@Localizer["SEO"]</tab>
    <tab code="Products">@Localizer["Products"]</tab>
  </tabs>
  <tab-pages>
    <tab-page code="General">
      <single-line-text-field for="Url" />
      <multilingual-single-line-text-field for="Name" localizations="@Model.NameLocalizations" />
      <multilingual-multiline-text-field for="Description" localizations="this.Model.DescriptionLocalizations" />
      <numeric-field for="Position" />
    </tab-page>
    <tab-page code="Seo">
      <multilingual-single-line-text-field for="Title" localizations="this.Model.TitleLocalizations" />
      <multilingual-single-line-text-field for="MetaDescription" localizations="this.Model.MetaDescriptionLocalizations" />
      <multilingual-single-line-text-field for="MetaKeywords" localizations="this.Model.MetaKeywordsLocalizations" />
    </tab-page>
    <tab-page code="Products">
      <drop-down-list-field for="ProductProviderCSharpClassName" options="@Model.ProductProviderCSharpClassNameOptions" onchange="platformus.ui.productProviderCSharpClassNameChanged();" />
      <div id="parameterEditors"></div>
      <input id="parameters" name="productProviderParameters" type="hidden" value="@Model.ProductProviderParameters" />
    </tab-page>
  </tab-pages>
  <div class="form__buttons buttons">
    <submit-button>@Localizer["Save"]</submit-button>
    <neutral-button href="/backend/categories">@Localizer["Cancel"]</neutral-button>
  </div>
</form>
<script>
  var productProviders = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(this.Model.ProductProviders));
</script>
@section startUpScript {
  platformus.ui.productProviderCSharpClassNameChanged();
  @foreach (var culture in await this.CultureManager.GetNotNeutralCulturesAsync())
  {
    @:platformus.ui.initializeTinyMce("description@(culture.Id)");
  }
}