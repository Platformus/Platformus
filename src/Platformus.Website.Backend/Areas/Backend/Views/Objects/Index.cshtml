@* Copyright © 2020 Dmitry Sikorsky. All rights reserved. *@
@* Licensed under the Apache License, Version 2.0. See License.txt in the project root for license information. *@
@model Platformus.Website.Backend.ViewModels.Objects.IndexViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@{
  if (this.Model.Class == null)
  {
    this.ViewBag.Title = this.Localizer["Objects"];
  }
  else
  {
    this.ViewBag.Title = this.Model.Class.PluralizedName;
  }
  this.ViewBag.ActiveMenuItem = "objects";
  this.ViewBag.HasSecondaryMaster = true;
}
@if (this.Model.Class != null)
{
  <title-bar>
    <neutral-button icon="Icons.Create" href="/backend/objects/create">@Localizer["Create"] @Model.Class.Name.ToLower()</neutral-button>
    @if (this.Model.ParentClass != null)
    {
      <neutral-button href="/backend/objects/?class.id=@Model.ParentClass.Id" skip-url-parameters="class.id,primary.id">@Localizer["Back"]</neutral-button>
    }
  </title-bar>
  <table sorting="@Model.Sorting">
    <columns>
      @foreach (var tableColumn in this.Model.TableColumns)
      {
        <column label="@tableColumn.Label" sorting-property-path="@tableColumn.SortingPropertyPath" />
      }
    </columns>
    <rows>
      @foreach (var @object in this.Model.Objects)
      {
        <partial name="_Object" for="@(@object)" />
      }
    </rows>
  </table>
  <pager offset="@Model.Offset" limit="@Model.Limit" total="@Model.Total" />
}
@section secondaryMaster
{
  <div class="master-detail__master master-detail__master--secondary">
    <div class="master-detail__heading heading heading--h1">
      @Localizer["Objects"]
    </div>
    <div class="menu" data-code="classes">
      @foreach (var abstractClass in this.Model.ClassesByAbstractClasses.Keys)
      {
        <div class="menu__menu-group menu-group" data-code="menuGroupClass@(abstractClass.Id)">
          <div class="menu-group__title" tabindex="0">@abstractClass.PluralizedName</div>
          <div class="menu-group__menu-items">
            @foreach (var @class in this.Model.ClassesByAbstractClasses[abstractClass])
            {
              <a class="menu-group__menu-item menu-item icon @(this.Model.Class != null && this.Model.Class.Id == @class.Id ? "menu-item--active" : null)" href="/backend/objects?class.id=@(@class.Id)">
                @(@class.PluralizedName)
              </a>
            }
          </div>
        </div>
      }
    </div>
  </div>
}